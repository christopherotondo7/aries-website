---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import Image from '~/components/common/Image.astro';

export interface GalleryItem {
  image: string;
  title: string;
  subtitle?: string;
}

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  items?: Array<GalleryItem>;
  columns?: number;
  spacing?: 'tight' | 'normal' | 'wide';
  variant?: 'minimal' | 'overlay' | 'cards';
  isDark?: boolean;
  classes?: Record<string, string>;
  bg?: string;
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  spacing = 'normal',
  variant = 'overlay',
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

const gridCols = {
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',
  5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5',
  6: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6',
};

const spacingClasses = {
  tight: 'gap-2',
  normal: 'gap-4 md:gap-6',
  wide: 'gap-6 md:gap-8',
};
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  
  <div class={`grid ${gridCols[columns] || 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'} ${spacingClasses[spacing]}`}>
    {items.map((item, index) => (
      <div class="group relative">
        {variant === 'minimal' && (
          <div class="relative aspect-[4/3] overflow-hidden rounded-lg">
            <Image
              src={item.image}
              alt={item.title}
              class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
              widths={[400, 800]}
              sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
              loading={index < 6 ? "eager" : "lazy"}
            />
            <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-300" />
          </div>
        )}
        
        {variant === 'overlay' && (
          <div class="relative aspect-[4/3] overflow-hidden rounded-lg">
            <Image
              src={item.image}
              alt={item.title}
              class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
              widths={[400, 800]}
              sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
              loading={index < 6 ? "eager" : "lazy"}
            />
            
            {/* Gradient overlay */}
            <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
            
            {/* Text overlay */}
            <div class="absolute bottom-0 left-0 right-0 p-6 text-white transform translate-y-4 group-hover:translate-y-0 opacity-0 group-hover:opacity-100 transition-all duration-300">
              <h3 class="text-xl font-bold mb-1">{item.title}</h3>
              {item.subtitle && (
                <p class="text-sm text-gray-200">{item.subtitle}</p>
              )}
            </div>
          </div>
        )}
        
        {variant === 'cards' && (
          <div class="bg-white dark:bg-slate-800 rounded-xl shadow-md hover:shadow-xl transition-shadow duration-300 overflow-hidden">
            <div class="relative aspect-[4/3] overflow-hidden">
              <Image
                src={item.image}
                alt={item.title}
                class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
                widths={[400, 800]}
                sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
                loading={index < 6 ? "eager" : "lazy"}
              />
            </div>
            <div class="p-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">{item.title}</h3>
              {item.subtitle && (
                <p class="text-sm text-gray-600 dark:text-gray-300">{item.subtitle}</p>
              )}
            </div>
          </div>
        )}
      </div>
    ))}
  </div>
</WidgetWrapper>