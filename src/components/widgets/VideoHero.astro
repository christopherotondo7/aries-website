---
import Button from '~/components/ui/Button.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  video?: {
    src: string;
    poster?: string;
  };
  image?: {
    src: string;
    alt: string;
  };
  buttons?: Array<{
    text: string;
    href: string;
    style?: string;
  }>;
}

const {
  title = '',
  subtitle = '',
  tagline,
  content = '',
  video,
  image,
  buttons = [],
} = Astro.props;

const hasMedia = !!(video?.src || image?.src);
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <!-- Video Background -->
  {video?.src && (
    <div class="absolute inset-0 w-full h-full">
      <!-- Poster image as background while video loads -->
      {video.poster && (
        <div 
          class="absolute inset-0 w-full h-full bg-cover bg-center bg-no-repeat"
          style={`background-image: url('${video.poster}')`}
        ></div>
      )}
      <video
        class="absolute inset-0 w-full h-full object-cover"
        autoplay
        muted
        loop
        playsinline
        preload="metadata"
        poster={video.poster}
      >
        <source src={video.src} type="video/mp4" />
        Your browser does not support the video tag.
      </video>
      <!-- Dark overlay for better text readability -->
      <div class="absolute inset-0 bg-black bg-opacity-40"></div>
    </div>
  )}

  <!-- Image Background (fallback if no video) -->
  {!video?.src && image?.src && (
    <div class="absolute inset-0 w-full h-full">
      <img
        class="absolute inset-0 w-full h-full object-cover"
        src={image.src}
        alt={image.alt || ''}
        width="1200"
        height="630"
      />
      <!-- Dark overlay for better text readability -->
      <div class="absolute inset-0 bg-black bg-opacity-40"></div>
    </div>
  )}

  <!-- Content -->
  <div class="relative z-10 max-w-7xl mx-auto px-6 text-center">
    <div class="max-w-4xl mx-auto">
      
      {tagline && (
        <p class="text-blue-400 font-semibold text-sm uppercase tracking-wider mb-4">
          {tagline}
        </p>
      )}
      
      {title && (
        <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold leading-tight tracking-tight font-heading text-white mb-6">
          <Fragment set:html={title} />
        </h1>
      )}
      
      {subtitle && (
        <h2 class="text-xl md:text-2xl lg:text-3xl font-medium text-white mb-8 leading-relaxed">
          <Fragment set:html={subtitle} />
        </h2>
      )}
      
      {content && (
        <div class="text-lg md:text-xl text-gray-200 mb-10 leading-relaxed">
          <Fragment set:html={content} />
        </div>
      )}
      
      {buttons.length > 0 && (
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          {buttons.map((button) => (
            <Button 
              variant={button.style || "primary"}
              href={button.href}
              class="text-lg px-8 py-4"
            >
              {button.text}
            </Button>
          ))}
        </div>
      )}
    </div>
  </div>

  <!-- Scroll indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 text-white animate-bounce">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>