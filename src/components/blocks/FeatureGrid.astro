---
export interface Props {
  title?: string;
  subtitle?: string;
  features: Array<{
    title: string;
    description: string;
    icon?: string;
  }>;
  columns?: 2 | 3 | 4;
  className?: string;
  background?: 'white' | 'gray' | 'blue';
}

const { title, subtitle, features, columns = 3, className = '', background = 'white' } = Astro.props;

const bgClasses = {
  white: 'bg-white dark:bg-slate-900',
  gray: 'bg-gray-50 dark:bg-slate-800', 
  blue: 'bg-blue-50 dark:bg-blue-900'
};

const gridClasses = {
  2: 'md:grid-cols-2',
  3: 'md:grid-cols-2 lg:grid-cols-3',
  4: 'md:grid-cols-2 lg:grid-cols-4'
};
---

<section class={`py-16 ${bgClasses[background]} ${className}`}>
  <div class="max-w-6xl mx-auto px-4">
    {title && (
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl mb-4">
          {title}
        </h2>
        {subtitle && (
          <p class="text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
            {subtitle}
          </p>
        )}
      </div>
    )}
    
    <div class={`grid ${gridClasses[columns]} gap-8`}>
      {features.map((feature) => (
        <div class="text-center">
          {feature.icon && (
            <div class="w-16 h-16 mx-auto mb-6 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center">
              <i class={`${feature.icon} w-8 h-8 text-blue-600`}></i>
            </div>
          )}
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">
            {feature.title}
          </h3>
          <p class="text-gray-600 dark:text-gray-300">
            {feature.description}
          </p>
        </div>
      ))}
    </div>
  </div>
</section>